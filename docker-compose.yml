version: '3'

services:
    bot:
        build:
            context: .
            args:
                GOBINARY: arenaBot
                GOFILE: ./bin/bot/bot.go
        container_name: bot
        environment:
            APP_ID: $APP_ID
            GUILD_ID: $GUILD_ID
            BOT_TOKEN: $BOT_TOKEN
            ARENA_URL: http://backend:$BACKEND_PORT
        entrypoint: ["/usr/bin/arenaBot"]
        networks:
            - arenaFront
        restart: always
    backend:
        build:
            context: .
            args:
                GOBINARY: arenaBackend
                GOFILE: ./bin/backend/backend.go
        container_name: backend
        environment:
            MONGO_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongo:27017/$MONGODB_DATABASE
            HTTP_PORT: $BACKEND_PORT
        entrypoint: ["/usr/bin/arenaBackend"]
        ports:
            - "$BACKEND_PORT:$BACKEND_PORT"
        networks:
            - arenaFront
            - arenaBack
        restart: always
    loader:
        build:
            context: .
            args:
                GOBINARY: arenaLoader
                GOFILE: ./bin/loader/loader.go
        container_name: loader
        environment:
            MONGO_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongo:27017/$MONGODB_DATABASE
            DND_API: https://www.dnd5eapi.co
            TIMEOUT: 30s
            INDEXES: "armor,weapon"
        entrypoint: ["/usr/bin/arenaLoader"]
        networks:
            - arenaBack
    mongo:
        image: bitnami/mongodb:latest
        container_name: mongo
        environment:
            MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD
            MONGODB_DATABASE: $MONGODB_DATABASE
            MONGODB_USER: $MONGODB_USER
            MONGODB_PASSWORD: $MONGODB_PASSWORD
        networks:
            - arenaBack
            - arenaAdmin
        volumes:
            - ./_mongo:/docker-entrypoint-initdb.d/
        restart: always
    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        environment: 
            ME_CONFIG_MONGODB_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongo:27017/$MONGODB_DATABASE
        ports:
            - 8081:8081
        networks:
            - arenaAdmin
        depends_on: 
            - mongo
        restart: always

networks:
    arenaFront:
        driver: bridge
    arenaBack:
        driver: bridge
    arenaAdmin:
        driver: bridge

