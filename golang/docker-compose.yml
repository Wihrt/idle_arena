version: '2'

services:
    bot:
        build:
            context: .
            args:
                GOBINARY: arenaBot
                GOFILE: ./bot/bot.go
        container_name: bot
        environment:
            APP_ID: $APP_ID
            GUILD_ID: $GUILD_ID
            BOT_TOKEN: $BOT_TOKEN
            ARENA_URL: http://backend:5000
        entrypoint: ["/usr/bin/arenaBot"]
        networks:
            - arenaFront
        restart: always
    backend:
        build:
            context: .
            args:
                GOBINARY: arenaBackend
                GOFILE: ./backend/backend.go
        container_name: backend
        environment:
            MONGO_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongo:27017/$MONGODB_DATABASE?authSource=admin
        entrypoint: ["/usr/bin/arenaBackend"]
        ports:
            - 5000:5000
        networks:
            - arenaFront
            - arenaBack
        restart: always
    mongo:
        image: mongo:latest
        container_name: mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: $MONGODB_ROOT_USER
            MONGO_INITDB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD
            MONGODB_INIT_DATABASE: $MONGODB_DATABASE
        networks:
            - arenaBack
        volumes:
            - ./mongo:/docker-entrypoint-initdb.d/
        restart: always

networks:
    arenaFront:
        driver: bridge
    arenaBack:
        driver: bridge

