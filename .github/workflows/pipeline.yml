name: Idle Arena CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOCKER_USER: megalooo

jobs:

  docker-bot:
    name: "Build and Push Docker bot image"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Docker login
      run: docker login -u ${{ env.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      env:
        IMAGE: arena_bot
        CONTEXT: ./golang
        GOBINARY: arenaBot
        GOFILE: ./bot/bot.go
      run: |-
        echo docker build --build-arg GOBINARY=${{ env.GOBINARY }} --build-arg GOFILE=${{ env.GOFILE }} -t ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.CONTEXT }}
        docker build --build-arg GOBINARY=${{ env.GOBINARY }} --build-arg GOFILE=${{ env.GOFILE }} -t ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.CONTEXT }}
        docker push ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }}

  docker-backend:
    name: "Build and Push Docker backend image"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Docker login
      run: docker login -u ${{ env.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      env:
        IMAGE: arena_backend
        CONTEXT: ./golang
        GOBINARY: arenaBackend
        GOFILE: ./backend/backend.go
      run: |-
        echo docker build --build-arg GOBINARY=${{ env.GOBINARY }} --build-arg GOFILE=${{ env.GOFILE }} -t ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.CONTEXT }}
        docker build --build-arg GOBINARY=${{ env.GOBINARY }} --build-arg GOFILE=${{ env.GOFILE }} -t ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.CONTEXT }}
        docker push ${{ env.DOCKER_USER }}/${{ env.IMAGE }}:${{ github.sha }}

  ansible:
    name: "Prepare environment and deploy"
    runs-on: ubuntu-latest
    needs:
      - docker-bot
      - docker-backend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Ansible
      run: pip install ansible
    - name: Add key to playbook repository
      run: |-
        echo $SSH_KEY > ansible/vps_key_private
        chmod 0600 ansible/vps_key_private
        cat ansible/vps_key_private
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    - name: Run ansible playbook
      run: |- 
        cd ansible
        ansible-playbook -e "token=$TARGET" -e "target=$TARGET_HOST" -e "target_user=$TARGET_USER" -e "bot_version=$BOT_TOKEN" playbook.yml
      env:
        TARGET_HOST: ${{ secrets.TARGET_HOST }}
        TARGET_USER: ${{ secrets.TARGET_USER }}
        BOT_VERSION: ${{ github.sha }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
