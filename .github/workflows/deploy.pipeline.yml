name: "Deploy application"

on:
  workflow_run:
    workflows: ["Build Docker images"]
    branches: ["main", "develop"]
    types:
    - completed

jobs:
  ansible:
    name: "Prepare environment"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Ansible
      run: pip install ansible
    - name: Decrypt vps_key_private
      run: |-
        cd ansible
        echo ${{ secrets.VAULT_PASSWORD }} > vault_password
        ansible-vault decrypt --vault-password-file vault_password $PRIVATE_KEY
        chmod 0600 $PRIVATE_KEY
    - name: Install prerequistes on server
      run: |- 
        cd ansible
        ansible-playbook -e "target=$TARGET_HOST" -e "target_user=$TARGET_USER" -e "private_key=$PRIVATE_KEY" -t remote,k3s,kubectl,helm,kubeconfig playbook.yml
      env:
        TARGET_HOST: ${{ secrets.TARGET_HOST }}
        TARGET_USER: ${{ secrets.TARGET_USER }}
    - name: Upload kubeconfig file
      uses: actions/upload-artifact@v2
      with:
        name: kubeconfig
        path: $HOME/kubeconfig
        retentions-days: 1
  
  helm:
    name: "Deploy application"
    runs-on: ubuntu-latest
    needs:
      - ansible
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Download kubeconfig file
      uses: actions/download-artifact@v2
      with:
        name: kubeconfig
    - name: Install Ansible
      run: pip install ansible
    - name: Install Helm and Helmfile
      run: |-
        cd ansible
        ansible-playbook -t local,kubectl,helm,helm-plugins,helmfile playbook.yml
    # - name: Run Helmfile - Develop
    #   if: github.ref != 'refs/head/master'
    #   env:
    #     KUBECONFIG: ../kubeconfig
    #     ENVIRONMENT: develop
    #   run: |-
    #     cd helmfile
    #     helmfile sync -e $ENVIRONMENT
    # - name: Run Helmfile - Production
    #   if: github.ref == 'refs/head/master'
    #   env:
    #     KUBECONFIG: ../kubeconfig
    #     ENVIRONMENT: production
    #   run: |-
    #     cd helmfile
    #     helmfile sync -e $ENVIRONMENT
