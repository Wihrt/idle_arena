name: "Deploy application"

on:
  workflow_run:
    workflows: ["Build Docker images"]
    branches: ["main", "develop"]
    types:
    - completed

env:
  PRIVATE_KEY: vps_key_private

jobs:
  ansible:
    name: "Prepare environment"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Ansible
      run: pip install ansible
    - name: Decrypt private key
      run: |-
        cd ansible
        echo "${{ secrets.SSH_KEY }}" > $PRIVATE_KEY
        chmod 0600 $PRIVATE_KEY
    - name: Install prerequistes on server
      run: |- 
        cd ansible
        ansible-playbook -e "target=$TARGET_HOST" -e "target_user=$TARGET_USER" -e "private_key=$PRIVATE_KEY" -t remote,k3s,kubectl,helm,kubeconfig playbook.yml
      env:
        TARGET_HOST: ${{ secrets.TARGET_HOST }}
        TARGET_USER: ${{ secrets.TARGET_USER }}
    - name: Upload kubeconfig file
      uses: actions/upload-artifact@v2
      with:
        name: kubeconfig
        path: ansible/kubeconfig
        retention-days: 1
  
  helm:
    name: "Deploy application"
    runs-on: ubuntu-latest
    needs:
      - ansible
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Download kubeconfig file
      uses: actions/download-artifact@v2
      with:
        name: kubeconfig
    - name: Install Ansible
      run: pip install ansible
    - name: Install Helm and Helmfile
      run: |-
        cd ansible
        ansible-playbook -b -t local,kubectl,helm,helm-plugins,helmfile playbook.yml
    - name: Inject GPG private key
      run: |-
        echo "${{ secrets.PGP_KEY }}" > $PRIVATE_KEY
        gpg --import $PRIVATE_KEY
      env:
        PRIVATE_KEY: private.key
    - name: Run Helmfile - Develop
      if: github.ref != 'refs/heads/main'
      env:
        KUBECONFIG: ../kubeconfig
        ENVIRONMENT: develop
      run: |-
        cd helmfile
        helmfile -e $ENVIRONMENT sync 
    - name: Run Helmfile - Production
      if: github.ref == 'refs/heads/main'
      env:
        KUBECONFIG: ../kubeconfig
        ENVIRONMENT: production
      run: |-
        cd helmfile
        helmfile -e $ENVIRONMENT sync
