apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bot.fullname" . }}
  labels:
    {{- include "bot.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bot.serviceAccountName" . }}
      initContainers:
        - name: "wait-for-service"
          image: busybox
          command: ['sh', '-c', 'until nc -zv $ARENA_HOST $ARENA_PORT; do echo "Waiting for arena backend"; sleep 2 ; done' ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BOT_TOKEN
            value: {{ .Values.env.bot_token }}
          - name: APP_ID
            value: {{ .Values.env.app_id }}
          - name: GUILD_ID
            value: {{ .Values.env.guild_id }}
          - name: ARENA_URL
            value: "http://{{ .Values.env.arena_host }}:{{ .Values.env.arena_port }}"
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
